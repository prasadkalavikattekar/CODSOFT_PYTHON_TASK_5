class ContactBook:
    def __init__(self):
        self.contacts = []

    def add_contact(self, name, phone, email, address):
        contact = {
            "name": name,
            "phone": phone,
            "email": email,
            "address": address
        }
        self.contacts.append(contact)
        print(f"Contact for {name} added successfully!")

    def view_contacts(self):
        if not self.contacts:
            print("No contacts available.")
            return
        print("\nContact List:")
        for idx, contact in enumerate(self.contacts, start=1):
            print(f"{idx}. {contact['name']} - {contact['phone']}")

    def search_contact(self, search_term):
        results = [
            contact for contact in self.contacts
            if search_term.lower() in contact['name'].lower() or search_term in contact['phone']
        ]
        if results:
            print("\nSearch Results:")
            for contact in results:
                self.display_contact(contact)
        else:
            print("No contacts found matching your search.")

    def update_contact(self, search_term):
        for contact in self.contacts:
            if search_term.lower() in contact['name'].lower() or search_term in contact['phone']:
                print("Contact found:")
                self.display_contact(contact)
                name = input("Enter new name (leave blank to keep unchanged): ") or contact['name']
                phone = input("Enter new phone number (leave blank to keep unchanged): ") or contact['phone']
                email = input("Enter new email (leave blank to keep unchanged): ") or contact['email']
                address = input("Enter new address (leave blank to keep unchanged): ") or contact['address']
                contact.update({"name": name, "phone": phone, "email": email, "address": address})
                print("Contact updated successfully!")
                return
        print("No contact found with the given details.")

    def delete_contact(self, search_term):
        for contact in self.contacts:
            if search_term.lower() in contact['name'].lower() or search_term in contact['phone']:
                print("Contact found:")
                self.display_contact(contact)
                confirm = input("Are you sure you want to delete this contact? (yes/no): ").strip().lower()
                if confirm in ('yes', 'y'):
                    self.contacts.remove(contact)
                    print("Contact deleted successfully!")
                else:
                    print("Deletion canceled.")
                return
        print("No contact found with the given details.")

    @staticmethod
    def display_contact(contact):
        print(f"Name: {contact['name']}")
        print(f"Phone: {contact['phone']}")
        print(f"Email: {contact['email']}")
        print(f"Address: {contact['address']}\n")

def main():
    contact_book = ContactBook()
    while True:
        print("\nContact Book Menu:")
        print("1. Add Contact")
        print("2. View Contact List")
        print("3. Search Contact")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Exit")

        try:
            choice = int(input("Choose an option (1-6): "))
            if choice == 1:
                name = input("Enter name: ")
                phone = input("Enter phone number: ")
                email = input("Enter email: ")
                address = input("Enter address: ")
                contact_book.add_contact(name, phone, email, address)
            elif choice == 2:
                contact_book.view_contacts()
            elif choice == 3:
                search_term = input("Enter name or phone number to search: ")
                contact_book.search_contact(search_term)
            elif choice == 4:
                search_term = input("Enter name or phone number to update: ")
                contact_book.update_contact(search_term)
            elif choice == 5:
                search_term = input("Enter name or phone number to delete: ")
                contact_book.delete_contact(search_term)
            elif choice == 6:
                print("Exiting Contact Book. Goodbye!")
                break
            else:
                print("Invalid choice. Please try again.")
        except ValueError:
            print("Invalid input. Please enter a number between 1 and 6.")

if __name__ == "__main__":
    main()
